version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  
commands:
  destroy-environment:
    description: Destroy back-end cloudformation stack given a workflow ID
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws cloudformation delete-stack \
                --stack-name "udacity-capstone-${CIRCLE_WORKFLOW_ID:0:7}"
  
jobs:
  build:
    docker:
      - image: cimg/python:3.10.0
        auth:
          username: $USERNAME
          password: $PASSWD
        
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
              
      - setup_remote_docker:
          version: 19.03.13
              
      - run:
          name: build a Dockerfile
          command: |
            docker build --tag=capstone .
            docker images
      - run:
          name: push a docker image
          command: |
            docker login -u $USERNAME -p $PASSWD
            docker tag capstone $USERNAME/capstone
            docker push $USERNAME/capstone
                
  start-container:
    docker:
      - image: cimg/python:3.10.0
        auth:
          username: $USERNAME
          password: $PASSWD
        
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: run docker container
          command: |
            python3 -m venv venv
            . venv/bin/activate
            docker login -u $USERNAME -p $PASSWD
            docker pull $USERNAME/capstone
            docker run -itd -p 8000:80 $USERNAME/capstone
            docker container ls
            
  create-ec2-instance:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: create ec2 instance from template
          command: |
            aws cloudformation deploy \
              --template-file ./templates/server.yml \
              --tags Name=capstone-${CIRCLE_WORKFLOW_ID:0:7} \
              --stack-name "udacity-capstone-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"
      - run:
          name: get public ipv4
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:Name,Values=backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --output text >> ./inventory.txt
            cat inventory.txt
            
      - destroy-environment
      
  create-cluster:
    docker:
      - image: python:3.7-alpine3.11
    
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
            cat ./inventory.txt
      - run:
          ansible-playbook -i ./inventory.txt ./ansible/configure-server.yml
          
      - destroy-environment
    

workflows:
  default:
    jobs:
      - build    
      - start-container:
            requires: [build]
      - create-ec2-instance:
            requires: [start-container]
      - create-cluster:
            requires: [create-ec2-instance]
  